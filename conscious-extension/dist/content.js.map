{"version":3,"file":"content.js","mappings":";;;;AAAA,6CAA6C;AAC7C,gEAAgE;AAEhE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE;IACpD,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC;AAEH,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAE9B,SAAS,gBAAgB;IACvB,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC1B,IAAI,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,GAAG,EAAE;YACvD,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gBAC7B,sBAAsB;YACxB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,sBAAsB;IACxB,CAAC;AACH,CAAC;AAED,wCAAwC;AACxC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5E,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1E,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AACxE,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzE,6CAA6C;AAC7C,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE;IACrE,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;QAC9B,kDAAkD;QAClD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAED,IAAI,OAAO,CAAC,MAAM,KAAK,eAAe,EAAE,CAAC;QACvC,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,YAAY,CAAC;QACpD,YAAY,CAAC,EAAE,iBAAiB,EAAE,CAAC,CAAC;IACtC,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,aAAa;AACb,gBAAgB,EAAE,CAAC","sources":["webpack://conscious-tab/./src/content.ts"],"sourcesContent":["// Content script for user activity detection\n// This script runs on all web pages to detect user interactions\n\nconsole.log('Content script loaded');\nchrome.runtime.sendMessage({ test: 'ping' }, (resp) => {\n  console.log('Content got response:', resp, chrome.runtime.lastError);\n});\n\nlet lastActivity = Date.now();\n\nfunction resetIdleCounter() {\n  lastActivity = Date.now();\n  try {\n    chrome.runtime.sendMessage({ action: 'resetIdle' }, () => {\n      if (chrome.runtime.lastError) {\n        // Ignore or log error\n      }\n    });\n  } catch (e) {\n    // Ignore or log error\n  }\n}\n\n// Add event listeners for user activity\ndocument.addEventListener('mousemove', resetIdleCounter, { passive: true });\ndocument.addEventListener('keydown', resetIdleCounter, { passive: true });\ndocument.addEventListener('click', resetIdleCounter, { passive: true });\ndocument.addEventListener('scroll', resetIdleCounter, { passive: true });\n\n// Listen for messages from background script\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (message.status === 'idle') {\n    // Could add visual indicators here for idle state\n    console.log('User is idle');\n  }\n  \n  if (message.action === 'checkActivity') {\n    const timeSinceActivity = Date.now() - lastActivity;\n    sendResponse({ timeSinceActivity });\n  }\n});\n\n// Initialize\nresetIdleCounter();\n"],"names":[],"sourceRoot":""}